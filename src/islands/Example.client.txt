//import { useState, useEffect } from "preact/hooks";

// const styles = stylex.create({
//   button: {
//     outline: {
//       ":focusVisible": "3px solid var(--blue)",
//       ":active": "3px solid var(--blue)",
//     },
//     outlineOffset: {
//       ":focusVisible": "3px",
//       ":active": "3px",
//     },
//     borderRadius: {
//       ":focusVisible": "0.125rem",
//       ":active": "0.125rem",
//     },

//     color: "#000000",
//     fontWeight: "bold",
//     padding: "10px",
//     cursor: "pointer",
//     borderColor: "#000000",
//     borderWidth: "2px",
//     backgroundColor: {
//       default: "#00a96e",
//       ":hover": "#e0819b",
//       ":active": "#e0819b",
//     },
//     boxShadow: {
//       default: "0",
//       ":hover": "2px 2px 0 rgba(0,0,0,1)",
//     },
//   },
// });

const Example = (props) => {
  const [textIsShowing, setAnimation] = useState(false);
  const [isMounted, setMounted] = useState(false);
  useEffect(() => setMounted(true), []);
  return (
    <div>
      <button
        className="exampleButton"
        type="button"
        disabled={!isMounted}
        onClick={() => {
          if (textIsShowing) {
            setAnimation(false);
            return;
          }
          setAnimation(true);
        }}
      >
        {props.buttonText}
      </button>
      {textIsShowing ? <p>{props.text}</p> : null}
    </div>
  );
};

export default Example;
